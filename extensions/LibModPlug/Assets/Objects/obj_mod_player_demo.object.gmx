<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
song_tempo = 0;
song_channels = 0;
song_length = "";
pause = false;
for(var i=31; i&gt;=0; i--) {
  mute[i] = false;
  volume[i] = 0;
}

// Initialize the MOD player with the wanted sample rate (44100 or 48000)
MOD_Init(44100);

// Load a song
// You can download the Scream Tracker mod I used for testing here:
// https://modarchive.org/index.php?request=view_by_moduleid&amp;query=60395
// and include it in your project. Rename it to "second_pm.s3m", seems like
// GMS can add an underscore to the beginning of an included file if the name
// starts with a digit.
var sound_id = MOD_LoadSong("mods/second_pm.s3m", -1);

// Check if succesful
title = "none";
if(sound_id)
{
  title = MOD_GetName();
  MOD_Play();
  song_channels = MOD_NumChannels();
  song_length = string(MOD_GetLength()/1000) + "s";
  song_tempo = MOD_GetTempo();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Perform various mod functions

// Play
if(keyboard_check_pressed(vk_enter))
  MOD_Play();

// Pause 
if(keyboard_check_pressed(vk_space)) {
  pause = !pause;
  MOD_Pause(pause);
}

// Stop
if(keyboard_check_pressed(vk_escape))
  MOD_Stop();
  
// Set tempo
if(keyboard_check_pressed(vk_up)) {
  if(song_tempo&lt;400)
    song_tempo++;
  MOD_SetTempo(song_tempo);
}
if(keyboard_check_pressed(vk_down)) {
  if(song_tempo&gt;10)
    song_tempo--;
  MOD_SetTempo(song_tempo);
}

// Mute / Unmute / Get channel volume
for(var i=0; i&lt;song_channels; i++) {

  if(i &lt;= 8) { // Limit to keyboard keys 1-9
    if(keyboard_check_pressed(ord(string(i+1)))) {
      mute[i] = !mute[i];
      MOD_MuteChannel(i,mute[i]);
    }
  }

  volume[i] = MOD_GetChannelVolume(i);
}

// Set all channel volumes to 10
if(mouse_check_button_pressed(mb_left)) {
  for(var i=0; i&lt;song_channels; i++)
    MOD_SetChannelVolume(i, 10);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw song information
draw_set_color(c_white);
draw_text(10, 10, title);
draw_text(10, 25, "Tempo: " + string(song_tempo));
draw_text(10, 40, "Channels: " + string(song_channels));
draw_text(10, 55, "Length: " + song_length);

var channels = "Playing channels: ";
var channels_vol = "Volume: ";
for(var i=0; i&lt;song_channels; i++) {
  channels += string(!mute[i]) + " ";
  channels_vol += string(volume[i]) + " ";
}
draw_text(10, 70, channels);
draw_text(10, 85, channels_vol);

draw_text(10, 110, "FPS: " + string(fps) + "/" + string(fps_real));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
