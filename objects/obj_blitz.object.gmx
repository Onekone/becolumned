<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ui_blitz_score</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_quest</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer = 300*60;

grid = instance_nearest(x,y,obj_grid);

glow = 0;
warning = 0;
gemsTotal = 0;
megashard = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (timer-1) == 0 {
    audio_play_sound(snd_explode,0,0);
}

if gemsTotal != grid.gemsTotal {
    gemsTotal = grid.gemsTotal;
    glow = 1.25;
}
glow = lerp(glow,((100-grid.hud_levelbar)&gt;10)*1,0.04);


if grid.state == state_gameover {
    megashard = lerp(megashard,0,max(0.04,(1-megashard)/5))
} else megashard = (100-grid.hud_levelbar)/100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_halign(fa_left)draw_set_valign(fa_left)draw_set_font(font0)
draw_text_colour(8,8,'Remaining time: '+string_time(timer),c_white,c_white,c_white,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SCORE
_x = global.options_blitz_scoreboard_pos[0];
_y = global.options_blitz_scoreboard_pos[1];

d = dsin(current_time mod 360)*0.5+0.5;
w = 1-min(timer/60,30)/30;

draw_healthbar(_x+366-188,_y+16-124,_x+894-188,_y+73-124,7.56+timer/17300*84.84,c_maroon,c_yellow,c_yellow,0,1,0);
draw_sprite(ui_blitz_megashard,grid.state == state_gameover,_x,_y+236-124+clamp(181*megashard,0,181))

if grid.state != state_gameover {
    draw_sprite_ext(ui_blitz_megashard,2,_x,_y+236-124+clamp(181*megashard,0,181),1,1,0,c_white,glow)
    draw_sprite_ext(ui_blitz_megashard,3,_x,_y+236-124+clamp(181*megashard,0,181),1,1,0,c_white,d*w)        
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(ui_blitz_megashard,2,_x,_y+236-124+clamp(181*megashard,0,181),1,1,0,c_white,glow-1)
    draw_set_blend_mode(bm_normal);
    
    draw_sprite_ext(ui_blitz_cuff,0,_x,_y+261-124+clamp(181*megashard,0,181),1,1,0,c_white,1)
        
}

draw_sprite(ui_blitz_score,0,_x,_y)
draw_sprite(ui_blitz_timer,grid.state == state_gameover,_x+lerp(366+44,894-44,timer/18000)-188,_y+46-124)

draw_sprite(ui_blitz_shards,0+2*(grid.state == state_gameover),_x-129-13,_y)
draw_sprite(ui_blitz_shards,1+2*(grid.state == state_gameover),_x+129+13,_y)

if grid.state != state_gameover {  
    draw_sprite_ext(ui_blitz_shards_glow,0+2*(grid.state == state_gameover),_x-129-13,_y,1,1,0,c_white,glow);
    draw_sprite_ext(ui_blitz_shards_glow,1+2*(grid.state == state_gameover),_x+129+13,_y,1,1,0,c_white,glow);   
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(ui_blitz_cuff,0,_x,_y+261-124+clamp(181*megashard,0,181),1,1,0,c_red,d*w)        
    draw_sprite_ext(ui_blitz_timer,3,_x+lerp(366+44,894-44,timer/18000)-188,_y+46-124,1,1,0,c_white,w*d)        
    draw_sprite_ext(ui_blitz_shards_glow,0,_x-129-13,_y,1,1,0,c_white,glow-1);
    draw_sprite_ext(ui_blitz_shards_glow,1,_x+129+13,_y,1,1,0,c_white,glow-1); 
    draw_set_blend_mode(bm_normal);
    draw_sprite_ext(ui_blitz_shards_glow,2,_x-129-13,_y,1,1,0,c_white,w*d);
    draw_sprite_ext(ui_blitz_shards_glow,3,_x+129+13,_y,1,1,0,c_white,w*d);   
}

draw_set_font(font0)
draw_set_halign(fa_center)draw_set_valign(fa_middle)

if grid.state != state_gameover {
draw_text_colour(_x+2,_y+263-124+clamp(181*megashard,0,181),max(grid.gemsNextLevel - grid.gemsTotal,0),0,0,0,0,1)
draw_text_colour(_x,_y+261-124+clamp(181*megashard,0,181),max(grid.gemsNextLevel - grid.gemsTotal,0),c_white,c_white,c_white,c_white,1)
}

draw_text_colour(_x,_y,round(grid.hud_Score),c_white,c_white,c_white,c_white,1)
draw_text_colour(_x+lerp(366+44,894-44,timer/18000)-188,_y+46-124,string_time_short(timer),c_white,c_white,c_white,c_white,1);

t = '#'+string(grid.hud_chains)+' Match Chain';
if grid.chains&gt;0 
t = 'CHAINS +'+string(grid.hud_chains*10)+'#'+string(grid.hud_chains)+' Match Chain';

draw_enable_alphablend(false);
draw_set_colour_write_enable(false,false,false,true);
draw_set_alpha(0); 
    draw_rectangle(0,0, room_width,room_height, false);

draw_set_alpha(1);
draw_enable_alphablend(true);
var w = string_width(t)*grid.hud_chain_pulse*0.8;
var h = string_height(t)*grid.hud_chain_pulse*0.8;
var c = make_colour_hsv(current_time mod 1000/1000*255,255,255);

draw_text_ext_transformed_colour(_x,_y-85,t,30,-1,
    grid.hud_chain_pulse*0.8,grid.hud_chain_pulse*0.8,0,c_white,c_white,c_white,c_white,1);

draw_enable_alphablend(true);
draw_set_colour_write_enable(true,true,true,true);
draw_set_blend_mode_ext(bm_dest_alpha,bm_inv_dest_alpha);
    draw_rectangle_colour(_x-w,_y-85-h,_x+w,_y-85+h,c_white,c_white,c_white,c_white,0);
    draw_rectangle_colour(_x-w/2,_y-85-h/2,_x-w/2+(grid.chains-4)*w/4,_y-85+h/2,c,c,c,c,0);    
draw_set_blend_mode(bm_normal);


 t = clamp(dsin(grid.level_pulse*180)*0.35+0.70,0.70,1);
 draw_set_font(font2);
draw_text_transformed_colour(_x+1,_y+66,'x'+string(grid.hud_Level+1),t,t,0,0,0,0,0,1); 
draw_text_transformed_colour(_x,_y+65,'x'+string(grid.hud_Level+1),t,t,0,c_white,c_white,c_white,c_white,1);

draw_set_font(font0)
draw_set_halign(fa_left)draw_set_valign(fa_top)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// NEXT

_x = global.options_blitz_nextboard_pos[0];
_y = global.options_blitz_nextboard_pos[1];
scale = grid.scale;

draw_sprite(ui_next,0,_x,_y)
if !grid.hypercubeNext {
    for(i=0;i&lt;3;i++) {
        draw_sprite_stretched(spr_gem_animated,grid.piecesNext[i]*20+(current_time mod 1000/1000 * 19.99),_x-(scale/2),_y-(i-1)*scale-(scale/2),scale,scale)
        }
} 
else for(i=0;i&lt;3;i++) {
    draw_sprite_stretched(sprite1,current_time mod 1000/1000 * 60,_x-(scale/2),_y-(i-1)*scale-(scale/2),scale,scale)
    draw_sprite_stretched_ext(sprite29,current_time mod 1000/1000 * 60,_x-(scale/2),_y-(i-1)*scale-(scale/2),scale,scale,c_white, grid.hud_hypercube_blink);
    draw_sprite_ext(sprite2,current_time mod 1000/1000 * 60,_x,_y-(i-1)*scale,scale/160,scale/160,0,c_white,image_alpha);    
//    draw_sprite_stretched(sprite2,current_time mod 1000/1000 * 60,_x-(scale/2),_y-(i-1)*scale-(scale/2),scale,scale)
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
