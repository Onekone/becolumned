<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bg = 0;
al = 0;
sc = 0;
Score = 9999999;

levels = irandom(20);

w = 450; h = 250;

_m = 1.33-bg*0.33
_x = x-w/2-71;
_y = y-h/2-71;
_w = w; _h = h;

maximum = 0;

timer = '0:00';
bestMove = 0;
cascade = 0;
chain = 0;

with obj_grid bgFadeTarget = 0;

for(i=0;i&lt;levels;i++){
    NormalScore[i] = irandom(5000);
    MatchesScore[i] = irandom(5000);    
    ColorScore[i] = irandom(5000);
    ChainScore[i] = irandom(5000);
    CascadeScore[i] = irandom(5000);
    maximum = max(maximum,MatchesScore[i]+NormalScore[i]+ColorScore[i]+ChainScore[i]+CascadeScore[i])
}

action = noone;
pressed = noone;
released = noone;
hovering = noone;
prev_hovering = noone;

keyboard_select = noone;

prev_mx = mouse_x;
prev_my = mouse_y;

 i = 0;
 page = 0;
 button[i,0] = _x+71-120+w/2;   button[i,1] = _y+132+h; button[i,2] = 200; button[i,3] = 54; button[i,4] = 0; button[i,5] = -1; i++; 
 button[i,0] = _x+71+w/2;       button[i,1] = _y+65+h;  button[i,2] = 200; button[i,3] = 54; button[i,4] = 0; button[i,5] = -1; i++;
 button[i,0] = _x+71+120+w/2;   button[i,1] = _y+132+h; button[i,2] = 200; button[i,3] = 54; button[i,4] = 0; button[i,5] = -1; i++;
 
 for(j=0;j&lt;3;j++) {
 button[i,0] = _x+20;   button[i,1] = _y+65+45*j; button[i,2] = 40; button[i,3] = 40; button[i,4] = 0; button[i,5] = 0; i++; 
 }
 buttons = i;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open('options.ini');

show_debug_overlay(global.options_debug);
audio_debug(global.options_adebug);

ini_write_real('options', 'fullscreen', window_get_fullscreen());
ini_write_real('options', 'debug', global.options_debug);
ini_write_real('options', 'adebug', global.options_adebug);

ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>visible</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bg = lerp(bg,1,0.08)
al = max(bg,al);
sc = min(sc+0.0825,1);

_m = 1.33-bg*0.33;

_w = w; _h = h;
_x = x-_w/2-71;
_y = y-_h/2-71;

/**

draw_small_button(_x+71+_w/2-240*_m,_y+102*_m+_h,'BADGES',175*_m,0);
draw_large_button(_x+71+_w/2,_y+102*_m+_h,'PLAY AGAIN',190*_m,0);
draw_small_button(_x+71+_w/2+240*_m,_y+102*_m+_h,'MAIN MENU',175*_m,0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var mb_l = mouse_check_button_pressed(mb_left); mb_l_r = mouse_check_button_released(mb_left);
hovering = noone;

for(i=0;i&lt;buttons;i++) if (button[i,5] == page or button[i,5]&lt;0) {
 hovered = in_range(mouse_x,button[i,0]-button[i,2]/2,button[i,0]+button[i,2]/2) &amp;&amp; in_range(mouse_y,button[i,1]-button[i,3]/2,button[i,1]+button[i,3]/2);
 if (hovered) {
    hovering = i;
    keyboard_select = noone;
 }
 button[i,4] = hovered;
 if (mb_l &amp;&amp; hovered) {
    pressed = i; 
    audio_stop_sound(snd_button_press); 
    audio_play_sound(snd_button_press,0,0);
 }
 if (mb_l_r &amp;&amp; hovered) {
    released = i; 
 }
}
  
if (prev_hovering != hovering and hovering &gt;= 0 and pressed == noone) {
    audio_stop_sound(snd_button_hover);
    audio_play_sound(snd_button_hover,0,0);
}
prev_hovering = hovering;
  
if pressed&gt;=0 and hovering==pressed and mouse_check_button(mb_left) {
    button[pressed,4] = 2;
}
    
if pressed == released and pressed != noone {
    action = pressed; 
    pressed = noone; 
    released = noone;
} else {
    released = noone;
}

if hovering == noone {
    if keyboard_check_pressed(vk_left) {
        keyboard_select = clamp(keyboard_select-1,0,2)
    }
    if keyboard_check_pressed(vk_right) {
        keyboard_select = clamp(keyboard_select+1,0,2)
    }
    if keyboard_check_pressed(vk_space) {
        audio_stop_sound(snd_button_press);
        audio_play_sound(snd_button_press,0,0);
        action = keyboard_select;
    }
    if keyboard_select &gt;= 0
        button[keyboard_select,4] = 1;
}

if action != noone {
    audio_stop_sound(snd_button_release);
    audio_play_sound(snd_button_release,0,0);
    switch action {
        
        case 0: p = instance_create(x,y,obj_transition);
                p.goto = room_mainmenu;
                p.song = 'main_menu.it'; break;
        case 3: window_set_fullscreen(!window_get_fullscreen()); break;
        case 4: global.options_debug = !global.options_debug; 
                show_debug_overlay(global.options_debug); 
                break;
        case 5: global.options_adebug = !global.options_adebug; 
                audio_debug(global.options_adebug); 
                break;   
        case 2: instance_destroy(); with obj_grid paused=false; break;
        case 1: instance_destroy(); room_restart(); break;     
        break;
    }
}

action = noone;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(al*0.77)
c = $502828;
draw_rectangle_colour(0,0,1920,1080,c,c,c,c,0)
draw_set_alpha(1)

draw_nine(ui_dialog,_x-71,_y-71,_w,_h,142);

draw_set_font(titleFont)draw_set_halign(fa_center) draw_set_valign(fa_middle)
draw_text_transformed_colour(_x+71+_w/2,_y-11,'OPTIONS',0.70,0.70,0,c_white,c_white,c_white,c_white,1);

draw_set_font(font0)draw_set_halign(fa_left) draw_set_valign(fa_top)
draw_checkbox(_x+20,_y+65,'Fullscreen',window_get_fullscreen());
draw_checkbox(_x+20,_y+110,'Display debug overlay',global.options_debug);
draw_checkbox(_x+20,_y+155,'Display audio debug overlay',global.options_adebug);

draw_small_button(_x+71+_w/2-120,_y+132+_h,'MAIN MENU',175,   button[0,4]);
draw_small_button(_x+71+_w/2,_y+62+_h,'RESTART',190,      button[1,4]);
draw_small_button(_x+71+_w/2+120,_y+132+_h,'BACK',175,button[2,4]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
