<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ui_scoreboard</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grid = instance_nearest(x,y,obj_grid);

Score = 0;
hud_Score = 0;
Level = 0;
hud_Level = 0;
pulse = 0;

hud_chains = 0;
hud_chain_pulse = 0;
hud_chain_target = 0;
hud_chain_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>grid.paused</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hud_Score&lt;Score
hud_Score = ceil(lerp(hud_Score,Score,1/20));
else
hud_Score = floor(lerp(hud_Score,Score,1/20));

if hud_Level != Level
{
    hud_Level = Level;
    pulse = 1;
}
if pulse&gt;0
pulse -= 1/180;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if grid.chains &gt; 0 {
 if hud_chains != grid.chains {
    hud_chains = grid.chains;
    hud_chain_pulse = 1+min(grid.chains*0.05,0.33);
 }
 hud_chain_target = 1;
 hud_chain_pulse = max(lerp(hud_chain_pulse,1,0.05),1);
} else {
 if hud_chain_target==1 {hud_chain_target = 0; hud_chain_speed = -0.02;}

 hud_chain_speed += 0.000625;
 hud_chain_pulse = clamp(hud_chain_pulse+sign(hud_chain_target-hud_chain_pulse)*hud_chain_speed,0,1.33); 
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,0,x,y)
draw_set_font(font0)
draw_set_halign(fa_center)draw_set_valign(fa_middle)
draw_text_colour(x,y,round(hud_Score),c_white,c_white,c_white,c_white,1)

t = '#'+string(hud_chains)+' Match Chain';
if grid.chains&gt;0 
t = 'CHAINS +'+string(hud_chains*10)+'#'+string(hud_chains)+' Match Chain';


draw_enable_alphablend(false);
draw_set_colour_write_enable(false,false,false,true);
draw_set_alpha(0); 
    draw_rectangle(0,0, room_width,room_height, false);

draw_set_alpha(1);
draw_enable_alphablend(true);
var w = string_width(t)*hud_chain_pulse;
var h = string_height(t)*hud_chain_pulse;
var c = make_colour_hsv(current_time mod 1000/1000*255,255,255);

draw_text_ext_transformed_colour(x,y-105,t,30,-1,hud_chain_pulse,hud_chain_pulse,0,c_white,c_white,c_white,c_white,1);

draw_enable_alphablend(true);
draw_set_colour_write_enable(true,true,true,true);
draw_set_blend_mode_ext(bm_dest_alpha,bm_inv_dest_alpha);

    draw_rectangle_colour(x-w,y-105-h,x+w,y-105+h,c_white,c_white,c_white,c_white,0);
    draw_rectangle_colour(x-w/2,y-105-h/2,x-w/2+(grid.chains-4)*w/4,y-105+h/2,c,c,c,c,0);    
draw_set_blend_mode(bm_normal);



//draw_text_ext_transformed_colour(x,y-105,t,30,-1,1,1,0,c_white,c_white,c_white,c_white,1);

//draw_text_colour(x,y+40,hud_Level,c_white,c_white,c_white,c_white,1)

//if pulse&gt;0 {
 t = clamp(dsin(pulse*180)*0.35+0.70,0.70,1);
 draw_set_font(font2);
draw_text_transformed_colour(x+1,y+61,'x'+string(hud_Level+1),t,t,0,0,0,0,0,1); 
draw_text_transformed_colour(x,y+60,'x'+string(hud_Level+1),t,t,0,c_white,c_white,c_white,c_white,1);
//}
draw_set_font(font0)
draw_set_halign(fa_left)draw_set_valign(fa_top)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
