<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-15</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bg = 0;
al = 0;
show = true;

w = 700; h = 700;

_m = 1.33-bg*0.33
_x = 1920/2-w/2-71;
_y = 1080/2-h/2-71;
_w = w*_m; _h = h*_m;

with obj_grid bgFadeTarget = 0;


action = noone;
pressed = noone;
released = noone;
hovering = noone;
prev_hovering = noone;

keyboard_select = noone;

prev_mx = mouse_x;
prev_my = mouse_y;

 i = 0;
 button[i,0] = _x+71+w/2;  button[i,1] = _y+102+h; button[i,2] = 190; button[i,3] = 68; button[i,4] = 0; i++;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>badgeBG = 0;
badgeBGtarget = 1;

badgeAlpha = 0;
badgeSize = 0;

badgeEarned = -1;
badgeRank = 0;

hovered = false;

badgeTimer = 0;

tooltip = 0;

_w = w*_m; _h = h*_m;
_x = 1920/2-_w/2-71;
_y = 1080/2-_h/2-71;
_cw = (_w+144)/4; _ch = (_h-54)/2;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if badgeTimer&lt;=0 {
    for(i=0;i&lt;8;i++)
     for(j = 3; j&gt;=0; j--) {
       if ( global.badges[i,1] &gt;= global.benchmark[i,j] 
        &amp;&amp; global.badges[i,0] &lt; j)
        {
            show = false;
            badgeBG = 0;
            badgeBGtarget = 1;
            
            badgeAlpha = 0;
            badgeSize = 0;
                
            badgeEarned = i
            badgeRank = j;
            audio_play_sound(snd_badge,0,0);
            show_debug_message( global.badges[i,1] );
            show_debug_message( global.benchmark[i,j] );
            show_debug_message( global.badges[i,0] );
            show_debug_message( j );
            badgeTimer = 300;
            
            exit
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open('options.ini');

for(var i=0;i&lt;8;i++) {
     ini_write_real('badges_stats',i,global.badges[i,1])
     ini_write_real('badges_rank',i,global.badges[i,0])
}
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>badgeBGtarget = badgeTimer&gt;120
badgeAlpha = lerp(badgeAlpha,1,0.09);
_w = w*_m; _h = h*_m;
_x = 1920/2-_w/2-71;
_y = 1080/2-_h/2-71;
_cw = (_w+144)/4; _ch = (_h-54)/2
badgeBG = lerp(badgeBG,badgeBGtarget,0.09);

if badgeTimer&lt;=0 {
    for(i=0;i&lt;8;i++)
     for(j = 3; j&gt;=0; j--) {
       if ( global.badges[i,1] &gt;= global.benchmark[i,j] 
        &amp;&amp; global.badges[i,0] &lt; j)
        {
            badgeBG = 0;
            badgeBGtarget = 1;
            
            badgeAlpha = 0;
            badgeSize = 0;
                
            badgeEarned = i
            badgeRank = j;
            audio_play_sound(snd_badge,0,0);
            badgeTimer = 300;
                 ini_open('options.ini');
                 ini_write_real('badges_stats',i,global.badges[i,1])
                 ini_write_real('badges_rank',i,global.badges[i,0])
                 ini_close();
            exit
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>show</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bg = lerp(bg,1,0.08);
al = max(bg,al);
_m = 1.33-bg*0.33


/**

draw_small_button(_x+71+_w/2-240*_m,_y+102*_m+_h,'BADGES',175*_m,0);
draw_large_button(_x+71+_w/2,_y+102*_m+_h,'PLAY AGAIN',190*_m,0);
draw_small_button(_x+71+_w/2+240*_m,_y+102*_m+_h,'MAIN MENU',175*_m,0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>badgeTimer&lt;0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var mb_l = mouse_check_button_pressed(mb_left); mb_l_r = mouse_check_button_released(mb_left);
hovering = noone;

for(i=0;i&lt;1;i++) {
 hovered = in_range(mouse_x,(button[i,0]-button[i,2]/2)*_m,(button[i,0]+button[i,2]/2)*_m) 
        &amp;&amp; in_range(mouse_y,(button[i,1]-button[i,3]/2)*_m,(button[i,1]+button[i,3]/2)*_m);
 if (hovered) {
    hovering = i;
    keyboard_select = noone;
 }
 button[i,4] = hovered;
 if (mb_l &amp;&amp; hovered) {
    pressed = i; 
    audio_stop_sound(snd_button_press); 
    audio_play_sound(snd_button_press,0,0);
 }
 if (mb_l_r &amp;&amp; hovered) {
    released = i; 
 }
}
  
if (prev_hovering != hovering and hovering &gt;= 0 and pressed == noone) {
    audio_stop_sound(snd_button_hover);
    audio_play_sound(snd_button_hover,0,0);
}
prev_hovering = hovering;
  
if pressed&gt;=0 and hovering==pressed and mouse_check_button(mb_left) {
    button[pressed,4] = 2;
}
    
if pressed == released and pressed != noone {
    action = pressed; 
    pressed = noone; 
    released = noone;
} else {
    released = noone;
}

if hovering == noone {
    if keyboard_check_pressed(vk_left) {
        keyboard_select = clamp(keyboard_select-1,0,2)
    }
    if keyboard_check_pressed(vk_right) {
        keyboard_select = clamp(keyboard_select+1,0,2)
    }
    if keyboard_check_pressed(vk_space) {
        audio_stop_sound(snd_button_press);
        audio_play_sound(snd_button_press,0,0);
        action = keyboard_select;
    }
    if keyboard_select &gt;= 0
        button[keyboard_select,4] = 1;
}

if action != noone {
    audio_stop_sound(snd_button_release);
    audio_play_sound(snd_button_release,0,0);
    switch action {
        case 0: instance_destroy(); with obj_postgame visible=true; break;
    }
}

action = noone;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>badgeTimer&gt;=0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>badgeTimer--;

if badgeTimer &lt; 120 {
 if badgeTimer == 118 {
  audio_play_sound(snd_badgefall,0,0);
 }
 badgeSize = lerp(badgeSize,1,0.12)
 show = true;
 if badgeSize&gt;=0.99 and badgeEarned&gt;=0 {
    global.badges[badgeEarned,0] = badgeRank;
    badgeEarned = -1;
 }
} else {
 badgeSize = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>badgeTimer = min(badgeTimer,120);
if badgeSize&gt;=0.99 and badgeEarned&gt;=0 {
    badgeTimer = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>show</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(al*0.77)
c = $502828;
draw_rectangle_colour(0,0,1920,1080,c,c,c,c,0)
draw_set_alpha(1)

draw_nine(ui_gameover_plague,_x-71,_y-71,_w,_h,142);
draw_nine(ui_darkbox,_x,_y+71,_w,_h-182,77);

t = button[0,4];
if badgeEarned&gt;=0 t=3;
draw_small_button(_x+71+_w/2,_y+102*_m+_h,'OK',190*_m,  t    );

for(i=0;i&lt;4;i++)for(j=0;j&lt;2;j++) {
 var c = c_white, a=1;
 if global.badges[i+j*4,0]&lt;0 {c = c_gray; a=0;}
 _xx = _x+10*_m+_cw*(i+0.5); _yy = _y+77+_ch*(j+0.5);
 draw_sprite_ext(ui_badges,i+j*4,_xx,_yy,0.25*_m,0.25*_m,0,c,1)
 draw_sprite_ext(ui_badgeranks,global.badges[i+j*4,0],_xx,_yy,0.25*_m,0.25*_m,0,c_white,a) 

} 

var hovered = false;

for(i=0;i&lt;4;i++)for(j=0;j&lt;2;j++) { 
 k = i+j*4;
 _xx = _x+10*_m+_cw*(i+0.5); _yy = _y+77+_ch*(j+0.5);
 if in_range(mouse_x,_xx-54,_xx+54) &amp;&amp; in_range(mouse_y,_yy-54,_yy+54) {
     hovered = true;
     if tooltip&gt;0 {
         draw_set_alpha(tooltip)
         if global.badges[k,0]+1&lt;=3
             tt = ' ('+string(global.badges[k,1])+' / ' + string(global.benchmark[k,clamp(global.badges[k,0]+1,0,3)]) +')';
         else tt = ' (MAX RANK)'
         
         t =  string_replace(global.badges[k,3],':value',global.benchmark[k,clamp(global.badges[k,0]+1,0,3)])
            + tt;
         
         draw_nine(ui_tooltip,_xx,_yy,300,max(string_height_ext(t, 32, 450)-30,0)+12,50);
         draw_set_font(font0)draw_set_halign(fa_left)draw_set_valign(fa_top)
         draw_text_colour(_xx+30,_yy+20,global.badges[k,2],c_yellow,c_yellow,c_yellow,c_yellow,tooltip)
         draw_text_ext_transformed_colour(_xx+30,_yy+63,t,32,450,0.75,0.75,0,c_white,c_white,c_white,c_white,tooltip)     
         draw_set_alpha(1);
     }
 }
}
tooltip = lerp(tooltip,hovered,0.15);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>badgeEarned&gt;=0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(badgeBG*0.77)
c = $0;
draw_rectangle_colour(0,0,1920,1080,c,c,c,c,0)
draw_set_alpha(1)
t = clamp(badgeSize,0,1)
_px = lerp(960,_x+10*_m+_cw*(badgeEarned mod 4 +0.5),t);
_py = lerp(540,_y+77+_ch*(badgeEarned div 4 +0.5),t);
_ps = 1;
if badgeTimer&lt;120  _ps = lerp(1,0.25*_m,t);

draw_sprite_ext(ui_badges,badgeEarned,_px,_py,_ps,_ps,0,c_white,badgeAlpha);
draw_sprite_ext(ui_badgeranks,badgeRank,_px,_py,_ps,_ps,0,c_white,badgeAlpha);

c = c_white; br = 'NORMAL';
switch badgeRank {
 case 0: c= c_orange; br = 'BRONZE '; break;
 case 1: c= $eeeeee; br = 'SILVER '; break;
 case 2: c= c_yellow; br = 'GOLD '; break;
 case 3: c= $ffaaaa; br = 'PLATINUM '; break;
}


draw_set_font(font0)
draw_set_halign(fa_left) draw_set_valign(fa_middle)
br2 = '"'+global.badges[badgeEarned,2]+'" Badge';
_sw1 = string_width(br);
_sw = _sw1+string_width(br2)

draw_text_colour(960-_sw/2,130,br,c,c,c,c,badgeBG);
draw_text_colour(960-_sw/2+_sw1,130,br2,c_white,c_white,c_white,c_white,badgeBG);

  draw_set_halign(fa_center) draw_set_valign(fa_middle)
draw_text_colour(960,100,'You have earned',c_white,c_white,c_white,c_white,badgeBG);
draw_text_colour(960,980,string_replace(global.badges[badgeEarned,4],':value',string(global.benchmark[badgeEarned,badgeRank])),c_white,c_white,c_white,c_white,badgeBG);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
